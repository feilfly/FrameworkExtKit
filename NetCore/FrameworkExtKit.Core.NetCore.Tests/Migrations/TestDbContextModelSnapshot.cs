// <auto-generated />
using FrameworkExtKit.Core.NetCore.Tests.Models.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FrameworkExtKit.Core.NetCore.Tests.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ManyToManyEntityAs");
                });

            modelBuilder.Entity("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityABMapping", b =>
                {
                    b.Property<int>("ManyToManyEntityAId");

                    b.Property<int>("ManyToManyEntityBId");

                    b.HasKey("ManyToManyEntityAId", "ManyToManyEntityBId");

                    b.HasIndex("ManyToManyEntityBId");

                    b.ToTable("ManyToManyEntityABMappings");
                });

            modelBuilder.Entity("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ManyToManyEntityBs");
                });

            modelBuilder.Entity("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityABMapping", b =>
                {
                    b.HasOne("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityA", "EntityA")
                        .WithMany("ManyToManyEntityABMappings")
                        .HasForeignKey("ManyToManyEntityAId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FrameworkExtKit.Core.Tests.Models.ManyToManyEntityB", "EntityB")
                        .WithMany("ManyToManyEntityABMappings")
                        .HasForeignKey("ManyToManyEntityBId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
